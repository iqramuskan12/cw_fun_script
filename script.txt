#!/bin/bash
stats(){
echo "enter time"
read time
for A in $(ls -l /home/master/applications/| awk '/^d/ {print $NF}'); do echo $A && awk 'NR==1 {print substr($NF, 1, length($NF)-1)}' /home/master/applications/$A/conf/server.nginx ; sudo apm -s $A traffic -l $time ;done
for A in $(ls -l /home/master/applications/| awk '/^d/ {print $NF}'); do echo $A && awk 'NR==1 {print substr($NF, 1, length($NF)-1)}' /home/master/applications/$A/conf/server.nginx ; sudo apm -s $A mysql -l $time ;done
for A in $(ls -l /home/master/applications/| awk '/^d/ {print $NF}'); do echo $A && awk 'NR==1 {print substr($NF, 1, length($NF)-1)}' /home/master/applications/$A/conf/server.nginx ; sudo apm -s $A php -l $time ;done
}

restart(){
/etc/init.d/nginx restart && /etc/init.d/apache2 restart && /etc/init.d/php$(php -v | head -n 1 | cut -f2 -d " " | cut -f1,2 -d ".")-fpm restart && /etc/init.d/mysql restart

}

appname(){
read -p "Enter Url: " url
echo -n "Application Name: "
grep $url /home/master/applications/*/conf/server.nginx | cut -d ':' -f1 | cut -d '/' -f5
}


master()
{
for user in $(cat /etc/passwd | grep master | awk -F : '{print $1}'); do su $user; done
}


uncache(){
        if redis-cli ping > /dev/null 2>&1;
        then
                redis-cli flushall --allow-root > /dev/null;
                echo -e "$(tput setaf 2)\033[1mSuccess\033[0m: $(tput setaf 7)Redis cache flushed"
        fi
        if wp core version >/dev/null 2>&1;
        then
                wp cache flush --allow-root > /dev/null;
                echo -e "$(tput setaf 2)\033[1mSuccess\033[0m: $(tput setaf 7)WP cache flushed"
                if ! rm -rf ./wp-content/cache/*;
                then
                        echo -e "$(tput setaf 1)\033[1mFailed\033[0m: $(tput setaf 7)Reset permissions and try again."
                else echo -e "$(tput setaf 2)\033[1mSuccess\033[0m: $(tput setaf 7)wp-content/cache removed"
                fi
        elif php bin/magento --version >/dev/null 2>&1;
        then
                php bin/magento cache:clean;
                php bin/magento cache:flush;
        elif php artisan --version >/dev/null 2>&1;
        then
                php artisan optimize:clear
        fi
}

disk(){
#sudo apm traffic -s $dbname -l 1d
for A in $( find /home/master/applications/* -maxdepth 0 -type d -printf '%f\n' | awk '{print $NF}'); do echo $A && sudo apm -s $A -d && echo "----------------------------------------------------------------------------------------------------------"; done



bv(){
cat /var/log/auth.log | grep -E "88.99.145.111| 88.99.145.112| 195.201.197.31| 136.243.130.174| 144.76.236.242| 136.243.130.52| 116.202.131.150| 116.202.233.15| 116.202.193.3| 168.119.2.157| 46.4.119.73| 176.9.7.110| 116.202.132.228| 49.12.124.233| 88.99.146.248| 161.35.173.199| 82.196.7.193| 178.128.254.37| 188.166.93.235| 161.35.95.45| 167.99.10.105| 157.230.90.105| 67.205.157.229| 134.122.117.135| 134.209.217.222| 157.230.60.91| 159.89.236.13| 161.35.125.81| 143.110.167.147| 208.167.242.228| 207.246.90.100| 208.167.239.133| 45.77.217.4| 173.199.118.125| 149.28.34.152| 209.250.228.116| 192.248.146.126| 45.63.96.229| 199.247.12.214| 199.247.11.114| 199.247.13.106| 95.179.213.78| 95.179.217.204| 139.180.140.55| 45.63.14.190| 104.248.114.9| 192.81.221.63| 45.63.10.187| 45.76.137.73| 157.90.130.37| 157.90.130.93| 157.90.95.115| 157.90.95.102| 157.90.212.19| 157.90.212.16| 157.90.212.110| 157.90.212.107"
}

testu()
{
echo "Enter dbname :"
read db
cd /home/master/applications/$db/public_html/
wp user create testuser testuser@example.com --role=administrator --user_pass=123456 --allow-root
echo "name:testuser email:testuser@example.com pass:123456"
}

createu()
{
echo "Enter username"
read name
echo "Enter password"
read pass
echo "enter db"
read db
cd /home/master/applications/$db/public_html/
wp user create $name "$name"@email.com --role=administrator --user_pass=$pass --allow-root
wp cache flush
}


sedi()
{
echo "search:"
read s
echo "replace"
read r
echo "filepath"
read INPUTFILE
sed -i "s/$s/$r/g" $INPUTFILE
}

sr(){
echo "search:"
read search
echo "replace:"
read replace
wp search-replace $search $replace --all-tables;
wp cache flush
}

dump()
{
echo "Enter the db name: "
read db
cd /home/master/applications/$db/public_html/
mysqldump -u $db -p $db > db.sql
}

concurrentu()
{
watch -xtn 1 awk '$2 ~ /:01BB|:0050/ {count +=1;} END {print "Concurrent Web Traffic: ",count}' /proc/net/tcp
}

pluginc()
{
echo "Enter the db name: "
read db
cd /home/master/applications/$db/public_html/
for A in $(ls -la | awk '{print $NF}'); do echo $A && cat $A/conf/server.nginx && cat $A/logs/php-app.slow.log.1 | grep -ai 'wp-content/plugins' | cut -d " " -f1 --complement | cut -d '/' -f8 | sort | uniq -c | sort -nr ; done
}


ip()
{
hostname -I | awk '{print $1}'
}

backup()
{
echo "Enter the db name: "
read db
cd /home/master/applications/$db/public_html/
wp db export backup.sql
zip -r backup.zip /home/master/applications/$db/public_html/*
}



traffic(){
for A in $( find /home/master/applications/* -maxdepth 0 -type d -printf '%f\n' | awk '{print $NF}'); do echo -e "\e[33mApplication Name:\e[0m \e[31m$A\e[0m"  && cat /home/master/applications/$A/conf/server.nginx  && sudo apm traffic -s $A -l 1d && echo "----------------------------------------------------------------------------------------------------------"; done
}


phpmyadmin(){

wget https://files.phpmyadmin.net/phpMyAdmin/5.2.0/phpMyAdmin-5.2.0-english.zip

unzip phpMyAdmin-5.2.0-english.zip

mv phpMyAdmin-5.2.0-english phpmyadmin
}

